name: 🤖 CI

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prettier:
    name: 🅿️ Prettier
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'

      - name: 📥 Install deps
        run: npm install

      - name: 💅 Format check
        run: npm run format:check

  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'

      - name: 📥 Install deps
        run: npm install

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'

      - name: 📥 Install deps
        run: npm install

      - name: 🖼 Build icons
        run: npm run build:icons

      - name: 🔎 Type check
        run: npm run typecheck

  # vitest:
  #   name: ⚡ Vitest
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: npm
  #         node-version-file: '.nvmrc'

  #     - name: 📥 Install deps
  #       run: npm install

  #     - name: ⚡ Run vitest
  #       run: npm run test -- --coverage

  # cypress:
  #   name: ⚫️ Cypress
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: 🏄 Copy test env vars
  #       run: cp .env.example .env

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: npm
  #         node-version-file: '.nvmrc'

  #     - name: 📥 Install deps
  #       run: npm install

  #     - name: 🛠 Setup Database
  #       run: npx prisma migrate reset --force

  #     - name: ⚙️ Build
  #       run: npm run build

  #     - name: 🌳 Cypress run
  #       uses: cypress-io/github-action@v4
  #       with:
  #         start: npm run start:mocks
  #         wait-on: http://localhost:8811
  #       env:
  #         PORT: 8811

  build:
    name: 👷‍♂️ Build
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'

      - name: 📥 Install deps
        run: npm install

      - name: 🛠 Build
        run: npm run build

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    # needs: [prettier, lint, typecheck, vitest, cypress]
    needs: [prettier, lint, typecheck, build]
    # only deploy main and dev branches
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🚀 Deploy Dev
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@v1.4
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-dev
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@v1.4
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  release:
    name: 🆕 Release
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'

      - name: 📥 Install deps
        run: npm install

      - name: 🆕 Semantic Release
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
